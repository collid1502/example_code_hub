version: '3'
services:
  # create the Spark Cluster MASTER
  spark-master:
    image: bitnami/spark:3.3.4
    container_name: spark-master
    hostname: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"  # Spark master web UI
    networks:
      - spark-net

  # create Spark Cluster worker 1
  spark-worker-1:
    image: bitnami/spark:3.3.4
    container_name: spark-worker-1
    hostname: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8081:8081"  # Spark worker web UI
    depends_on:
      - spark-master
    networks:
      - spark-net

  # create Spark Cluster worker 2
  spark-worker-2:
    image: bitnami/spark:3.3.4
    container_name: spark-worker-2
    hostname: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8082:8082"  # Spark worker web UI
    depends_on:
      - spark-master
    networks:
      - spark-net

  # AWS Linux instance (custom image) to replicate an "edge node" for an EMR cluster 
  aws-linux:
    image: custom_aws_instance:v1  # Reference your custom image here
    container_name: edge-node
    tty: true
    ports:
      - "8888:8888"  # Expose Jupyter port
    volumes:
      - ./development_area:/development  # Mount local directory to container's workspace
    depends_on:
      - spark-master
    networks:
      - spark-net

  # MinIO for object storage
  minio:
    image: minio/minio:RELEASE.2024-09-09T16-59-28Z-cpuv1
    container_name: minio
    environment:
      - MINIO_ROOT_USER=minioadmin  # Replace with your preferred access key
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}  # Replace with your preferred secret key
    ports:
      - "9000:9000"  # MinIO API port
      - "9001:9001"  # MinIO console port
    volumes:
      - /tmp/minio:/data  # Bind mount to a temporary host directory
    command: server /data --console-address ":9001" 
    networks:
      - spark-net

networks:
  spark-net:
    driver: bridge
